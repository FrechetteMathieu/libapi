openapi: 3.0.0
info:
  version: 1.0.0
  title: LibAPI
  description: Un API de gestion de livres créé dans le cadre du cours Services Web H2021
  
servers: 
  - url: http://localhost/libapi/v1
paths:
  /books:
    get:
      tags:
        - Livre
      summary: Affiche la liste de tous les livres.
      parameters:
        - in: query
          name: titre
          schema:
            type: string
          required: false
          description: Une valeur pour filter par le titre
      responses:
        '200': 
          description: Un tableau de livres
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livres'
    
    post:
      tags: 
        - Livre
      summary: Crée un livre.
      requestBody:
        description: Les informations du livre à créer
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                genreId:
                  type: integer
                titre:
                  type: string
                isbn:
                  type: string
              example:
                genreId : 1
                titre: Fondation
                isbn: '9782070463619'
      responses:
        '201': 
          description: Le id du livre créé
          content:
            application/json:
              schema:
                type: object
                properties:
                  books_id:
                    type: integer
                example:
                  id : 1
  
  /books/{id}:
    get:
      tags:
        - Livre
      summary: Affiche un livre selon son id.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id du livre à afficher
          schema:
            type: integer
      responses:
        '200': 
          description: Le livre à afficher
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livre'
  
    put:
      tags:
        - Livre
      summary: Modifier un livre.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id du livre à modifier
          schema:
            type: integer
      requestBody:
        description: Les informations du livre à modifier.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                genreId:
                  type: integer
                titre:
                  type: string
                isbn:
                  type: string
              example:
                genreId : 1
                titre: Fondation
                isbn: '9782070463619'
      responses:
        '200': 
          description: Le livre modifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livre'
    
    delete:
      tags:
        - Livre
      summary: Supprime un livre selon son id.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id du livre à supprimer
          schema:
            type: integer
      responses:
        '200': 
          description: Le livre supprimé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livre'

  /authors:
    get:
      tags:
        - Auteur
      summary: Affiche la liste de tous les auteurs.
      responses:
        '200': 
          description: Un tableau d'auteurs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auteurs'
    
    post:
      tags: 
        - Auteur
      summary: Crée un auteur.
      requestBody:
        description: Les informations de l'auteur à créer
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
              example:
                nom: Asimov
                prenom: Isaac
      responses:
        '201': 
          description: Le id de l'auteur créé
          content:
            application/json:
              schema:
                type: object
                properties:
                  books_id:
                    type: integer
                example:
                  id : 1
    
  /authors/{id}/books:
    get:
      tags:
        - Auteur
      summary: Affiche tous les livres d'un auteur selon son id.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id de l'auteur
          schema:
            type: integer
      responses:
        '200': 
          description: les livres de l'auteur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Livres'

  /authors/{id}:
    get:
      tags:
        - Auteur
      summary: Affiche un auteur selon son id.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id de l'auteur à afficher
          schema:
            type: integer
      responses:
        '200': 
          description: L'auteur à afficher
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auteur'
  
    put:
      tags:
        - Auteur
      summary: Modifier un auteur.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id de l'auteur à modifier
          schema:
            type: integer
      requestBody:
        description: Les informations de l'auteur à modifier.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nom:
                  type: string
                prenom:
                  type: string
              example:
                nom: Asimov
                prenom: Isaac
      responses:
        '200': 
          description: L'auteur modifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auteur'
    
    delete:
      tags:
        - Auteur
      summary: Supprime un auteur selon son id.
      parameters:
        - name: id
          in: path
          required: true
          description: Le id du l'auteur à supprimer
          schema:
            type: integer
      responses:
        '200': 
          description: L'auteur supprimé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auteur'

components:
  schemas:
    
    Livre:
      type: object
      required:
        - genreId
        - titre
        - isbn
      properties:
        id:
          type: integer
          format: int64
        genreId:
          type: integer
          format: int64
        titre:
          type: string
        isbn:
          type: string
      example:
          id: 1
          genreId : 1
          titre: Fondation
          isbn: '9782070463619'
    
    Livres:
      type: array
      items:
        $ref: '#/components/schemas/Livre'

    Auteur:
      type: object
      required:
        - genreId
        - titre
        - isbn
      properties:
        id:
          type: integer
          format: int64
        nom:
          type: string
        prenom:
          type: string
      example:
          id: 1
          nom: Asimov
          prenom: Isaac
    
    Auteurs:
      type: array
      items:
        $ref: '#/components/schemas/Auteur'